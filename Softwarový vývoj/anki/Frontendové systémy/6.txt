6. Uživatelské vstupy - HTML formuláře základy	"<div><strong>HTML formuláře a jejich základy</strong></div><div><br></div><div>HTML formuláře jsou <strong>hlavní nástroj pro sběr uživatelských dat</strong> ve webových aplikacích.</div><div><br></div><ul><li><strong>&lt;form&gt;</strong> - kontejner pro formulářové prvky</li><li><strong>&lt;input&gt;</strong> - základní vstupní pole (text, email, password)</li><li><strong>&lt;textarea&gt;</strong> - víceřádkové textové pole</li><li><strong>&lt;select&gt;</strong> - rozbalovací seznam</li><li><strong>&lt;button&gt;</strong> - tlačítko pro odeslání</li></ul><div><br></div><div><strong>Klíčové atributy:</strong></div><ul><li><strong>name</strong> - identifikace pole na serveru</li><li><strong>id</strong> - propojení s label</li><li><strong>required</strong> - povinné pole</li><li><strong>placeholder</strong> - nápověda</li></ul>

6. Uživatelské vstupy - Inputy a jejich typy	"<div><strong>Typy HTML input elementů</strong></div><div><br></div><div>HTML5 rozšířilo možnosti <strong>typů vstupních polí</strong> pro lepší UX a validaci.</div><div><br></div><ul><li><strong>text</strong> - základní textové pole</li><li><strong>email</strong> - email s automatickou validací</li><li><strong>password</strong> - maskované heslo</li><li><strong>number</strong> - pouze číselné hodnoty</li><li><strong>tel</strong> - telefonní číslo</li><li><strong>url</strong> - webová adresa</li></ul><div><br></div><div><strong>Specializované typy:</strong></div><ul><li><strong>date/datetime-local</strong> - datum a čas</li><li><strong>color</strong> - výběr barvy</li><li><strong>range</strong> - posuvník</li><li><strong>file</strong> - nahrávání souborů</li></ul><div><br></div><div><strong>Výhoda:</strong> Automatická validace a optimalizované klávesnice na mobilech</div>"

6. Uživatelské vstupy - Client-side validace	"<div><strong>Client-side validace formulářů</strong></div><div><br></div><div>Validace na <strong>straně klienta</strong> poskytuje okamžitou zpětnou vazbu uživateli.</div><div><br></div><div><strong>HTML5 vestavěná validace:</strong></div><ul><li><strong>required</strong> - povinné pole</li><li><strong>pattern</strong> - regex pro validaci</li><li><strong>min/max</strong> - rozsah hodnot</li><li><strong>minlength/maxlength</strong> - délka textu</li></ul><div><br></div><div><strong>JavaScript validace:</strong></div><ul><li><strong>addEventListener('input')</strong> - validace při psaní</li><li><strong>addEventListener('submit')</strong> - validace před odesláním</li><li><strong>checkValidity()</strong> - kontrola validity</li><li><strong>setCustomValidity()</strong> - vlastní chybové zprávy</li></ul><div><br></div><div><strong>Knihovny:</strong> Yup, Joi, Formik, React Hook Form</div>"

6. Uživatelské vstupy - Server-side validace	"<div><strong>Server-side validace a bezpečnost</strong></div><div><br></div><div>Validace na <strong>serveru je nezbytná</strong> pro bezpečnost - client-side validaci lze obejít.</div><div><br></div><div><strong>Typy server validace:</strong></div><ul><li><strong>Sanitizace</strong> - očištění nebezpečných znaků</li><li><strong>Validace formátu</strong> - kontrola struktury dat</li><li><strong>Business validace</strong> - kontrola business pravidel</li><li><strong>Autorizace</strong> - oprávnění k akci</li></ul><div><br></div><div><strong>Bezpečnostní aspekty:</strong></div><ul><li><strong>SQL Injection</strong> - parametrizované dotazy</li><li><strong>XSS prevence</strong> - escapování HTML</li><li><strong>CSRF ochrana</strong> - tokeny</li><li><strong>Rate limiting</strong> - omezení počtu requestů</li></ul><div><br></div><div><strong>Nástroje:</strong> Express-validator, Joi, Yup, class-validator</div>"

6. Uživatelské vstupy - Dynamické formuláře	"<div><strong>Dynamické formuláře</strong></div><div><br></div><div>Formuláře, které se <strong>mění na základě uživatelských akcí</strong> nebo dat ze serveru.</div><div><br></div><div><strong>Typy dynamického chování:</strong></div><ul><li><strong>Podmíněná pole</strong> - zobrazení na základě výběru</li><li><strong>Kaskádové selecty</strong> - závislé rozbalovací seznamy</li><li><strong>Dynamické přidávání</strong> - přidání/odebrání polí</li><li><strong>Auto-complete</strong> - návrhy při psaní</li></ul><div><br></div><div><strong>Implementace:</strong></div><ul><li><strong>Vanilla JS</strong> - addEventListener, DOM manipulace</li><li><strong>React</strong> - useState, useEffect, podmíněné renderování</li><li><strong>Vue.js</strong> - v-if, v-for, computed properties</li><li><strong>Angular</strong> - *ngIf, FormArray, reactive forms</li></ul><div><br></div><div><strong>Knihovny:</strong> React Hook Form, Formik, VeeValidate</div>"

6. Uživatelské vstupy - Zpracování souborů	"<div><strong>Nahrávání a zpracování souborů</strong></div><div><br></div><div>Speciální typ vstupu pro <strong>práci se soubory</strong> od uživatelů.</div><div><br></div><div><strong>HTML základy:</strong></div><ul><li><strong>&lt;input type=\"file\"&gt;</strong> - základní file input</li><li><strong>multiple</strong> - více souborů najednou</li><li><strong>accept</strong> - omezení typů souborů</li><li><strong>capture</strong> - použití kamery na mobilech</li></ul><div><br></div><div><strong>JavaScript File API:</strong></div><ul><li><strong>FileReader</strong> - čtení obsahu souboru</li><li><strong>FormData</strong> - odeslání souborů na server</li><li><strong>Drag & Drop API</strong> - přetáhnutí souborů</li><li><strong>Progress events</strong> - zobrazení postupu nahrávání</li></ul><div><br></div><div><strong>Server-side:</strong> Multer (Node.js), storage (cloud), validace velikosti/typu</div>"

6. Uživatelské vstupy - State management formulářů	"<div><strong>Správa stavu formulářů</strong></div><div><br></div><div>Efektivní <strong>řízení stavu formulářových dat</strong> v moderních aplikacích.</div><div><br></div><div><strong>Přístupy ke stavu:</strong></div><ul><li><strong>Controlled components</strong> - React stav řídí hodnoty</li><li><strong>Uncontrolled components</strong> - DOM si drží vlastní stav</li><li><strong>Form libraries</strong> - specializované knihovny</li><li><strong>Global state</strong> - Redux, Zustand pro komplexní formy</li></ul><div><br></div><div><strong>Knihovny pro React:</strong></div><ul><li><strong>React Hook Form</strong> - minimální re-renders</li><li><strong>Formik</strong> - kompletní form solution</li><li><strong>React Final Form</strong> - vysoký výkon</li></ul><div><br></div><div><strong>Vue/Angular:</strong> VeeValidate, Angular Reactive Forms</div>"

6. Uživatelské vstupy - API komunikace a persistence	"<div><strong>Ukládání dat na backend</strong></div><div><br></div><div>Proces <strong>odesílání formulářových dat</strong> na server a jejich trvalé uložení.</div><div><br></div><div><strong>HTTP metody:</strong></div><ul><li><strong>POST</strong> - vytvoření nového záznamu</li><li><strong>PUT/PATCH</strong> - aktualizace existujícího</li><li><strong>GET</strong> - načtení dat do formuláře</li><li><strong>DELETE</strong> - smazání záznamu</li></ul><div><br></div><div><strong>Formáty dat:</strong></div><ul><li><strong>application/json</strong> - JSON data</li><li><strong>multipart/form-data</strong> - soubory</li><li><strong>application/x-www-form-urlencoded</strong> - tradiční</li></ul><div><br></div><div><strong>Nástroje:</strong></div><ul><li><strong>Fetch API, Axios</strong> - HTTP klienti</li><li><strong>React Query, SWR</strong> - cache a sync</li><li><strong>GraphQL</strong> - efektivní API</li></ul>"