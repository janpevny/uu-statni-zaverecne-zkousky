1. Klasifikace frontendových technologií - Definice frontendu	"<div><strong>Co je to frontend?</strong></div><div><br></div><div>Frontend je část software aplikace, která se starává o <strong>uživatelské rozhraní</strong> a přímou interakci s uživatelem.</div><div><br></div><ul><li><strong>Prezentační vrstva</strong> - zobrazování dat a obsahu</li><li><strong>Uživatelské rozhraní (UI)</strong> - ovládací prvky a navigace</li><li><strong>Uživatelská zkušenost (UX)</strong> - interakce a workflow</li><li><strong>Klient-side logika</strong> - validace, řízení stavu</li></ul><div><br></div><div><strong>Klíčové technologie:</strong> HTML, CSS, JavaScript, React, Vue.js, Angular</div>"

1. Klasifikace frontendových technologií - Webové aplikace	"<div><strong>Webové aplikace</strong></div><div><br></div><div>Aplikace běžící v <strong>webovém prohlížeči</strong>, přístupné přes HTTP/HTTPS protokol.</div><div><br></div><ul><li><strong>SPA (Single Page Application)</strong> - React, Vue.js, Angular</li><li><strong>MPA (Multi Page Application)</strong> - tradiční webové stránky</li><li><strong>PWA (Progressive Web App)</strong> - hybridní přístup</li><li><strong>SSR/SSG</strong> - server-side rendering, static site generation</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Multiplatformní přístup</li><li>Snadné nasazení a aktualizace</li><li>Žádná instalace potřebná</li></ul><div><br></div><div><strong>Příklady frameworků:</strong> Next.js, Nuxt.js, Svelte, Gatsby</div>"

1. Klasifikace frontendových technologií - Nativní mobilní aplikace	"<div><strong>Nativní mobilní aplikace</strong></div><div><br></div><div>Aplikace vyvinuté <strong>specificky pro mobilní platformu</strong> využívající nativní API a komponenty.</div><div><br></div><ul><li><strong>iOS</strong> - Swift, Objective-C, UIKit, SwiftUI</li><li><strong>Android</strong> - Java, Kotlin, Android SDK, Jetpack Compose</li><li><strong>Přímý přístup</strong> k hardware a OS funkcím</li><li><strong>Optimální výkon</strong> pro danou platformu</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Nejlepší výkon a integrace</li><li>Přístup ke všem funkcím zařízení</li><li>Nativní look & feel</li></ul><div><br></div><div><strong>Nevýhody:</strong> Vývoj pro každou platformu zvlášť, vyšší náklady</div>"

1. Klasifikace frontendových technologií - Cross-platform mobilní řešení	"<div><strong>Cross-platform mobilní vývoj</strong></div><div><br></div><div>Technologie umožňující <strong>vývoj pro více platforem</strong> současně s jedním codebase.</div><div><br></div><ul><li><strong>React Native</strong> - JavaScript, nativní komponenty</li><li><strong>Flutter</strong> - Dart, vlastní rendering engine</li><li><strong>Xamarin</strong> - C#, .NET framework</li><li><strong>Ionic</strong> - webové technologie v nativním wrapperu</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Společný kód pro více platforem</li><li>Rychlejší vývoj</li><li>Nižší náklady</li></ul><div><br></div><div><strong>Kompromisy:</strong> Částečné omezení výkonu, závislost na frameworku</div>"

1. Klasifikace frontendových technologií - VR/AR/MR technologie	"<div><strong>VR/AR/MR aplikace</strong></div><div><br></div><div>Immersivní technologie pro <strong>rozšířenou a virtuální realitu</strong>.</div><div><br></div><ul><li><strong>VR (Virtual Reality)</strong> - plně virtuální prostředí</li><li><strong>AR (Augmented Reality)</strong> - překrytí reálného světa</li><li><strong>MR (Mixed Reality)</strong> - kombinace AR/VR</li><li><strong>XR (Extended Reality)</strong> - zastřešující pojem</li></ul><div><br></div><div><strong>Technologie a platformy:</strong></div><ul><li><strong>WebXR</strong> - VR/AR v prohlížeči</li><li><strong>Unity 3D</strong> - C# pro VR/AR vývoj</li><li><strong>Unreal Engine</strong> - C++/Blueprints</li><li><strong>ARKit/ARCore</strong> - nativní AR pro iOS/Android</li></ul><div><br></div><div><strong>Aplikační oblasti:</strong> Gaming, vzdělávání, medicína, průmysl</div>"

1. Klasifikace frontendových technologií - Smartwatch aplikace	"<div><strong>Smartwatch aplikace</strong></div><div><br></div><div>Specializované aplikace pro <strong>nositelná zařízení</strong> s omezenou obrazovkou a specifickým UX.</div><div><br></div><ul><li><strong>watchOS</strong> - Swift, WatchKit framework</li><li><strong>Wear OS</strong> - Java/Kotlin, Wear OS API</li><li><strong>Tizen</strong> - Samsung watches, HTML5/JavaScript</li><li><strong>Fitbit OS</strong> - JavaScript, SVG</li></ul><div><br></div><div><strong>Designové principy:</strong></div><ul><li><strong>Glanceable UI</strong> - rychlé zobrazení informací</li><li><strong>Minimální interakce</strong> - jednoduché gesta</li><li><strong>Kontext aware</strong> - využití senzorů</li></ul><div><br></div><div><strong>Typické funkce:</strong> Notifikace, fitness tracking, quick actions</div>"

1. Klasifikace frontendových technologií - SmartTV aplikace	"<div><strong>SmartTV aplikace</strong></div><div><br></div><div>Aplikace pro <strong>televizní platformy</strong> s focus na media consumption a vzdálené ovládání.</div><div><br></div><ul><li><strong>Android TV</strong> - Java/Kotlin, Leanback library</li><li><strong>tvOS</strong> - Swift, UIKit for TV</li><li><strong>Tizen TV</strong> - HTML5, JavaScript, Samsung</li><li><strong>webOS</strong> - HTML5/JavaScript, LG televize</li></ul><div><br></div><div><strong>UX specifika:</strong></div><ul><li><strong>10-foot UI</strong> - design pro vzdálenost</li><li><strong>D-pad navigation</strong> - směrové ovládání</li><li><strong>Focus management</strong> - zvýrazňování aktivních prvků</li></ul><div><br></div><div><strong>Aplikační typy:</strong> Streaming services, hry, média přehrávače, smart home</div>"

1. Klasifikace frontendových technologií - Desktop aplikace	"<div><strong>Desktop aplikace</strong></div><div><br></div><div>Nativní a cross-platform řešení pro <strong>stolní počítače</strong>.</div><div><br></div><ul><li><strong>Electron</strong> - HTML/CSS/JS v nativním wrapperu</li><li><strong>Tauri</strong> - Rust backend, web frontend</li><li><strong>Flutter Desktop</strong> - Dart pro Windows/macOS/Linux</li><li><strong>.NET MAUI</strong> - C# multiplatform</li></ul><div><br></div><div><strong>Nativní vývoj:</strong></div><ul><li><strong>Windows</strong> - WinUI 3, WPF, UWP</li><li><strong>macOS</strong> - SwiftUI, AppKit</li><li><strong>Linux</strong> - GTK, Qt</li></ul><div><br></div><div><strong>Trend:</strong> Přechod na webové technologie pro cross-platform kompatibilitu</div>"