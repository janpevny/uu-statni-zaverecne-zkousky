6. Relační databáze - Základní vlastnosti relačních databází	"<div><strong>Relační databáze - základní vlastnosti</strong></div><div><br></div><div><strong>Definice:</strong></div><div>Databázový model založený na relačním modelu dat, kde jsou data organizována do tabulek (relací) s řádky (tuples) a sloupci (attributy)</div><div><br></div><div><strong>Klíčové vlastnosti:</strong></div><ul><li><strong>Strukturovaná data</strong> - data v tabulkách s pevnou strukturou</li><li><strong>Relace mezi tabulkami</strong> - propojení pomocí cizích klíčů</li><li><strong>ACID vlastnosti</strong> - Atomicity, Consistency, Isolation, Durability</li><li><strong>Normalizace</strong> - eliminace redundance dat</li></ul><div><br></div><div><strong>Základní komponenty:</strong></div><ul><li><strong>Tabulky (Relations)</strong> - základní datová struktura</li><li><strong>Řádky (Tuples)</strong> - jednotlivé záznamy</li><li><strong>Sloupce (Attributes)</strong> - datová pole</li><li><strong>Primární klíč</strong> - unikátní identifikátor řádku</li><li><strong>Cizí klíč</strong> - odkaz na jiný záznam</li></ul><div><br></div><div><strong>Příklady systémů:</strong> MySQL, PostgreSQL, Oracle, SQL Server, SQLite</div>"

6. Relační databáze - Výhody a nevýhody relačních databází	"<div><strong>Výhody a nevýhody relačních databází</strong></div><div><br></div><div><strong>Výhody:</strong></div><ul><li><strong>ACID compliance</strong> - garantuje datovou konzistenci</li><li><strong>Standardizované dotazy</strong> - SQL jako univerzální jazyk</li><li><strong>Normalizace</strong> - eliminuje duplikaci dat</li><li><strong>Referenční integrita</strong> - zajišťuje konzistenci vztahů</li><li><strong>Zralá technologie</strong> - dlouhá historie, stabilita</li><li><strong>Nástroje a podpora</strong> - široká nabídka nástrojů</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li><strong>Vertikální škálování</strong> - obtížná horizontální distribuce</li><li><strong>Rigid schéma</strong> - změny struktury jsou náročné</li><li><strong>Performance limity</strong> - u velkých objemů dat</li><li><strong>Object-Relational impedance mismatch</strong> - rozdíly s OOP</li><li><strong>Složitost JOINů</strong> - výkonnostní problémy u komplexních dotazů</li><li><strong>Licenční náklady</strong> - u komerčních databází</li></ul><div><br></div><div><strong>Alternativy:</strong></div><div>NoSQL databáze (MongoDB, Cassandra), Graph databáze (Neo4j), Time-series databáze</div>"

6. Relační databáze - SQL jazyk a jeho kategorie	"<div><strong>SQL (Structured Query Language)</strong></div><div><br></div><div><strong>Definice:</strong></div><div>Standardizovaný deklarativní jazyk pro práci s relačními databázemi</div><div><br></div><div><strong>Kategorie SQL příkazů:</strong></div><ol><li><strong>DDL (Data Definition Language)</strong> - definice struktury<ul><li>CREATE, ALTER, DROP, TRUNCATE</li></ul></li><li><strong>DML (Data Manipulation Language)</strong> - manipulace s daty<ul><li>SELECT, INSERT, UPDATE, DELETE</li></ul></li><li><strong>DCL (Data Control Language)</strong> - řízení přístupu<ul><li>GRANT, REVOKE</li></ul></li><li><strong>TCL (Transaction Control Language)</strong> - řízení transakcí<ul><li>COMMIT, ROLLBACK, SAVEPOINT</li></ul></li></ol><div><br></div><div><strong>Základní operace:</strong></div><ul><li><strong>JOIN</strong> - spojování tabulek (INNER, LEFT, RIGHT, FULL)</li><li><strong>WHERE</strong> - filtrování dat</li><li><strong>GROUP BY</strong> - seskupování dat</li><li><strong>ORDER BY</strong> - řazení výsledků</li><li><strong>Agregační funkce</strong> - COUNT, SUM, AVG, MIN, MAX</li></ul><div><br></div><div><strong>Pokročilé funkce:</strong> Subqueries, Views, Stored Procedures, Triggers, Indexy</div>"

6. Relační databáze - SQL dotazy a optimalizace	"<div><strong>SQL dotazy a optimalizace výkonu</strong></div><div><br></div><div><strong>Typy dotazů:</strong></div><ul><li><strong>Jednoduché SELECT</strong> - základní výběr dat</li><li><strong>JOIN dotazy</strong> - spojování více tabulek</li><li><strong>Subqueries</strong> - vnořené dotazy</li><li><strong>Agregační dotazy</strong> - seskupování a statistiky</li></ul><div><br></div><div><strong>Optimalizace výkonu:</strong></div><ul><li><strong>Indexy</strong> - B-tree, Hash, Bitmap indexy</li><li><strong>Query plánování</strong> - EXPLAIN plán vykonání</li><li><strong>Statistiky tabulek</strong> - pro optimalizátor</li><li><strong>Partitioning</strong> - rozdělení velkých tabulek</li></ul><div><br></div><div><strong>Best practices:</strong></div><ul><li>Používat WHERE klauzule pro filtrování</li><li>Vyhýbat se SELECT *</li><li>Optimalizovat JOIN podmínky</li><li>Používat LIMIT pro omezení výsledků</li><li>Analyzovat execution plány</li></ul><div><br></div><div><strong>Nástroje:</strong> Query analyzéry, Database profilers, Performance monitors</div>"

6. Relační databáze - Transakce a ACID vlastnosti	"<div><strong>Databázové transakce a ACID</strong></div><div><br></div><div><strong>Definice transakce:</strong></div><div>Logická jednotka práce skládající se z jedné nebo více databázových operací, která se provádí atomicky</div><div><br></div><div><strong>ACID vlastnosti:</strong></div><ul><li><strong>Atomicity (Atomičnost)</strong> - všechny operace nebo žádná</li><li><strong>Consistency (Konzistence)</strong> - databáze zůstává v konzistentním stavu</li><li><strong>Isolation (Izolace)</strong> - transakce neovlivňují jedna druhou</li><li><strong>Durability (Trvanlivost)</strong> - potvrzené změny jsou trvalé</li></ul><div><br></div><div><strong>Úrovně izolace:</strong></div><ol><li><strong>READ uncommitted</strong> - nejnižší, možné dirty reads</li><li><strong>read committed</strong> - čte jen potvrzené změny</li><li><strong>repeatable read</strong> - konzistentní čtení během transakce</li><li><strong>serializable</strong> - nejvyšší, úplná izolace</li></ol><div><br></div><div><strong>Problémy bez správné izolace:</strong></div><ul><li>Dirty Read, Non-repeatable Read, Phantom Read</li></ul><div><br></div><div><strong>Řízení transakcí:</strong> BEGIN, COMMIT, ROLLBACK, SAVEPOINT</div>"

6. Relační databáze - Normální formy databází	"<div><strong>Normální formy (Normal Forms)</strong></div><div><br></div><div><strong>Účel normalizace:</strong></div><div>Proces organizace dat v databázi pro minimalizaci redundance a závislostí</div><div><br></div><div><strong>První normální forma (1NF) - Atomické hodnoty:</strong></div><div><em>Požadavky:</em></div><ul><li>Atomické hodnoty v každém sloupci</li><li>Žádné opakující se skupiny</li><li>Každý řádek unikátní</li></ul><div><em>Příklad transformace:</em></div><div><strong>❌ Nenormalizovaná:</strong> Student | Předměty → Tomáš | Matematika, Fyzika, Chemie</div><div><strong>✅ 1NF:</strong> Student | Předmět → Tomáš | Matematika, Tomáš | Fyzika, Tomáš | Chemie</div><div><br></div><div><strong>Druhá normální forma (2NF) - Eliminace parciálních závislostí:</strong></div><div><em>Požadavky:</em></div><ul><li>Splňuje 1NF</li><li>Všechny non-key atributy plně závislé na celém primárním klíči</li><li>Eliminuje parciální závislosti u složených klíčů</li></ul><div><em>Příklad transformace:</em></div><div><strong>❌ 1NF s parciální závislostí:</strong> Student_ID | Předmět_ID | Jméno_studenta | Název_předmětu</div><div><strong>✅ 2NF:</strong> Rozdělení do tří tabulek: Student, Předmět, Zápis</div><div><br></div><div><strong>Třetí normální forma (3NF) - Eliminace tranzitivních závislostí:</strong></div><div><em>Požadavky:</em></div><ul><li>Splňuje 2NF</li><li>Žádné tranzitivní závislosti non-key atributů</li><li>Non-key atributy nezávislé na jiných non-key atributech</li></ul><div><em>Příklad transformace:</em></div><div><strong>❌ 2NF s tranzitivní závislostí:</strong> Kniha_ID | Název | Autor_ID | Jméno_autora</div><div><strong>✅ 3NF:</strong> Rozdělení do tabulek: Kniha, Autor, Nakladatel, Vydání</div><div><br></div><div><strong>Vyšší normální formy:</strong> BCNF, 4NF, 5NF - pro pokročilejší případy</div><div><strong>Trade-off:</strong> Vyšší normalizace → méně redundance, ale více JOINů</div>"

6. Relační databáze - Indexy a optimalizace výkonu	"<div><strong>Databázové indexy a výkonnostní optimalizace</strong></div><div><br></div><div><strong>Typy indexů:</strong></div><ul><li><strong>B-tree index</strong> - nejběžnější, pro range queries</li><li><strong>Hash index</strong> - pro equality lookups</li><li><strong>Bitmap index</strong> - pro low-cardinality data</li><li><strong>Compound index</strong> - více sloupců současně</li></ul><div><br></div><div><strong>Výhody indexů:</strong></div><ul><li>Rychlejší SELECT operace</li><li>Rychlejší JOIN operace</li><li>Rychlejší ORDER BY a GROUP BY</li><li>Unikátní omezení</li></ul><div><br></div><div><strong>Nevýhody indexů:</strong></div><ul><li>Dodatečné místo na disku</li><li>Pomalejší INSERT, UPDATE, DELETE</li><li>Údržba indexů</li></ul><div><br></div><div><strong>Optimalizační techniky:</strong></div><ul><li><strong>Query optimization</strong> - analyze execution plans</li><li><strong>Table partitioning</strong> - rozdělení velkých tabulek</li><li><strong>Materialized views</strong> - pre-computed results</li><li><strong>Connection pooling</strong> - efektivní správa připojení</li></ul><div><br></div><div><strong>Monitoring:</strong> Slow query logs, Performance metrics, Index usage statistics</div>"

6. Relační databáze - Databázový design a modelování	"<div><strong>Databázový design a datové modelování</strong></div><div><br></div><div><strong>Fáze návrhu:</strong></div><ol><li><strong>Konceptuální model</strong> - ER diagram, high-level view</li><li><strong>Logický model</strong> - normalizace, tabulky a vztahy</li><li><strong>Fyzický model</strong> - implementace, indexy, storage</li></ol><div><br></div><div><strong>ER diagramy:</strong></div><ul><li><strong>Entity</strong> - objekty reálného světa</li><li><strong>Atributy</strong> - vlastnosti entit</li><li><strong>Relationships</strong> - vazby mezi entitami</li><li><strong>Kardinalita</strong> - 1:1, 1:N, M:N vztahy</li></ul><div><br></div><div><strong>Best practices:</strong></div><ul><li>Jasná jmenná konvence</li><li>Správné datové typy</li><li>Referenční integrita (foreign keys)</li><li>Indexy pro často dotazované sloupce</li><li>Dokumentace schématu</li></ul><div><br></div><div><strong>Anti-patterns:</strong></div><ul><li>EAV (Entity-Attribute-Value) model</li><li>Polymorphic associations</li><li>Magic numbers místo lookup tables</li></ul><div><br></div><div><strong>Nástroje:</strong> ERD tools, Database design software, Schema migration tools</div>"