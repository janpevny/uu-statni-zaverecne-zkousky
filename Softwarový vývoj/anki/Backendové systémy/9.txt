9. Dokumentové nerelační databáze - Základní principy	"<div><strong>Dokumentové nerelační databáze</strong></div><div><br></div><div><strong>Definice:</strong></div><div>NoSQL databáze ukládající data jako dokumenty (JSON, BSON, XML), nikoliv v tabulkách s pevným schématem</div><div><br></div><div><strong>Klíčové charakteristiky:</strong></div><ul><li><strong>Schema-less</strong> - flexibilní struktura bez pevného schématu</li><li><strong>Dokumenty</strong> - základní jednotka pro ukládání dat</li><li><strong>Vnořené struktury</strong> - podporují vnořené objekty a pole</li><li><strong>Horizontální škálovatelnost</strong> - snadné rozšíření na více serverů</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Flexibilita struktury dat</li><li>Rychlý vývoj a prototypování</li><li>Přirozené mapování na objekty v programovacích jazycích</li><li>Vysoký výkon při čtení</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Slabší podpora pro komplexní relace</li><li>Možná redundance dat</li><li>Větší spotřeba paměti</li><li>Složitější migrace schématu</li></ul><div><br></div><div><strong>Příklady:</strong> MongoDB, CouchDB, Amazon DocumentDB, Azure Cosmos DB</div>"

9. Dokumentové nerelační databáze - Dokumenty a kolekce	"<div><strong>Dokumenty a kolekce v NoSQL</strong></div><div><br></div><div><strong>Dokument:</strong></div><ul><li>Základní jednotka pro ukládání dat</li><li>Formát: JSON, BSON (Binary JSON), XML</li><li>Může obsahovat vnořené objekty, pole, různé datové typy</li><li>Každý dokument má unikátní identifikátor (_id)</li></ul><div><br></div><div><strong>Kolekce:</strong></div><ul><li>Skupina dokumentů (obdoba tabulky v relačních DB)</li><li>Dokumenty v kolekci mohou mít různou strukturu</li><li>Neexistuje pevné schéma</li><li>Možnost indexování na úrovni kolekce</li></ul><div><br></div><div><strong>Struktura dokumentu (příklad):</strong></div><div><code>{</div><div><code>  "_id": ObjectId("..."),</div><div><code>  "name": "Jan Novák",</div><div><code>  "email": "jan@example.com",</div><div><code>  "addresses": [</div><div><code>    {"type": "home", "city": "Praha"},</div><div><code>    {"type": "work", "city": "Brno"}</code></div><div><code>  ]</div><div><code>}</code></div><div><br></div><div><strong>Výhody:</strong></div><ul><li>Intuitivní reprezentace objektů</li><li>Flexibilita struktury</li><li>Atomic operace na úrovni dokumentu</li></ul></div>"

9. Dokumentové nerelační databáze - Indexy a optimalizace	"<div><strong>Indexy v dokumentových databázích</strong></div><div><br></div><div><strong>Typy indexů:</strong></div><ul><li><strong>Single Field Index</strong> - index na jedno pole</li><li><strong>Compound Index</strong> - index na více polí</li><li><strong>Multikey Index</strong> - automatický index na pole obsahující array</li><li><strong>Text Index</strong> - fulltextové vyhledávání</li><li><strong>Geospatial Index</strong> - geografické dotazy</li></ul><div><br></div><div><strong>Optimalizace výkonu:</strong></div><ul><li><strong>Explain Plans</strong> - analýza provádění dotazů</li><li><strong>Covering Index</strong> - index obsahuje všechna potřebná data</li><li><strong>Index Intersection</strong> - kombinace více indexů</li><li><strong>Partial Index</strong> - index pouze na část dokumentů</li></ul><div><br></div><div><strong>Best practices:</strong></div><ul><li>Indexovat často dotazovaná pole</li><li>Omezit počet indexů (zpomalují zápisy)</li><li>Sledovat velikost indexů</li><li>Regular index maintenance</li></ul><div><br></div><div><strong>MongoDB příklad:</strong></div><div><code>db.users.createIndex({email: 1})</code></div><div><code>db.users.createIndex({name: 1, age: -1})</code></div><div><code>db.users.createIndex({location: "2dsphere"})</code></div></div>"

9. Dokumentové nerelační databáze - Dotazování a agregace	"<div><strong>Dotazování v dokumentových databázích</strong></div><div><br></div><div><strong>Základní dotazy:</strong></div><ul><li><strong>Find</strong> - vyhledávání dokumentů podle kritérií</li><li><strong>Filter</strong> - filtrování podle hodnot polí</li><li><strong>Projection</strong> - výběr konkrétních polí</li><li><strong>Sort</strong> - řazení výsledků</li><li><strong>Limit & Skip</strong> - stránkování</li></ul><div><br></div><div><strong>Aggregation Pipeline:</strong></div><ul><li><strong>$match</strong> - filtrování dokumentů</li><li><strong>$group</strong> - seskupování a výpočty</li><li><strong>$sort</strong> - řazení</li><li><strong>$project</strong> - transformace struktury</li><li><strong>$lookup</strong> - join s jinou kolekcí</li><li><strong>$unwind</strong> - rozložení pole na dokumenty</li></ul><div><br></div><div><strong>MongoDB příklady:</strong></div><div><code>db.products.find({price: {$gt: 100}})</code></div><div><code>db.orders.aggregate([</code></div><div><code>  {$match: {status: "completed"}},</code></div><div><code>  {$group: {_id: "$customerId", total: {$sum: "$amount"}}}</code></div><div><code>])</code></div><div><br></div><div><strong>Výhody:</strong></div><ul><li>Expresivní dotazovací jazyk</li><li>Podpora pro komplexní agregace</li><li>Optimalizované pro JSON struktury</li></ul></div>"

9. Dokumentové nerelační databáze - Horizontální škálování	"<div><strong>Horizontální škálování (Sharding)</strong></div><div><br></div><div><strong>Sharding:</strong></div><ul><li>Rozdělení dat napříč více servery</li><li>Každý shard obsahuje část dat</li><li><strong>Shard key</strong> - pole určující rozdělení</li><li>Automatické vyvažování dat mezi shardy</li></ul><div><br></div><div><strong>Komponenty:</strong></div><ul><li><strong>Shards</strong> - servery s daty (replica sets)</li><li><strong>Config servers</strong> - metadata o rozložení dat</li><li><strong>Mongos</strong> - router směřující dotazy</li></ul><div><br></div><div><strong>Strategie shardingu:</strong></div><ul><li><strong>Range-based</strong> - podle rozsahu hodnot</li><li><strong>Hash-based</strong> - podle hash funkce</li><li><strong>Zone-based</strong> - geografické rozdělení</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Teoreticky neomezená škálovatelnost</li><li>Lepší performance pro velké datasety</li><li>Geografická distribuce</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Složitost konfigurace a správy</li><li>Hotspot problémy při špatném shard key</li><li>Omezení cross-shard operací</li><li>Rebalancing overhead</li></ul><div><br></div><div><strong>Příklad:</strong> MongoDB sharded cluster s 3 shardy, každý jako 3-node replica set</div>"

9. Dokumentové nerelační databáze - Replikace a vysoká dostupnost	"<div><strong>Replikace a vysoká dostupnost</strong></div><div><br></div><div><strong>Replica Sets:</strong></div><ul><li><strong>Primary node</strong> - přijímá zápisy</li><li><strong>Secondary nodes</strong> - repliky pro čtení</li><li><strong>Arbiter</strong> - účastní se voleb, neukládá data</li><li>Automatické failover při výpadku primary</li></ul><div><br></div><div><strong>Consistency modely:</strong></div><ul><li><strong>Strong consistency</strong> - čtení z primary</li><li><strong>Eventual consistency</strong> - čtení z secondary (může být zastaralé)</li><li><strong>Read preference</strong> - primary, secondary, nearest</li></ul><div><br></div><div><strong>Write concern:</strong></div><ul><li><strong>w: 1</strong> - potvrzení od primary</li><li><strong>w: majority</strong> - potvrzení od většiny nodes</li><li><strong>j: true</strong> - zápis do journal (durabilita)</li></ul><div><br></div><div><strong>Výhody replikace:</strong></div><ul><li>Vysoká dostupnost (99.99%+)</li><li>Automatické recovery</li><li>Čtení z geograficky blízkých nodes</li><li>Backup bez downtime</li></ul><div><br></div><div><strong>Monitoring:</strong></div><ul><li>Replication lag</li><li>Oplog size a utilization</li><li>Member health status</li></ul><div><br></div><div><strong>Příklad MongoDB replica set:</strong></div><div>3 nodes: 1 primary + 2 secondary, automatic failover &lt; 30 seconds</div>"

9. Dokumentové nerelační databáze - Výkon a monitoring	"<div><strong>Výkon a monitoring dokumentových databází</strong></div><div><br></div><div><strong>Performance metriky:</strong></div><ul><li><strong>Operations/sec</strong> - počet operací za sekundu</li><li><strong>Query response time</strong> - doba odezvy dotazů</li><li><strong>Index hit ratio</strong> - efektivita indexů</li><li><strong>Memory usage</strong> - využití paměti</li><li><strong>Disk I/O</strong> - čtení/zápis na disk</li></ul><div><br></div><div><strong>Optimalizace výkonu:</strong></div><ul><li><strong>Index tuning</strong> - optimalizace indexů</li><li><strong>Query optimization</strong> - efektivní dotazy</li><li><strong>Connection pooling</strong> - sdílení spojení</li><li><strong>Read/Write separation</strong> - čtení z replica</li><li><strong>Caching</strong> - Redis, Memcached</li></ul><div><br></div><div><strong>Monitoring nástroje:</strong></div><ul><li><strong>MongoDB Compass</strong> - GUI nástroj</li><li><strong>MongoDB Atlas</strong> - cloud monitoring</li><li><strong>Prometheus + Grafana</strong> - open source</li><li><strong>Datadog, New Relic</strong> - komerční</li></ul><div><br></div><div><strong>Klíčové alerting:</strong></div><ul><li>High query response time</li><li>Replication lag</li><li>Disk space utilization</li><li>Memory pressure</li><li>Connection count limits</li></ul><div><br></div><div><strong>Best practices:</strong></div><ul><li>Regular performance testing</li><li>Proactive capacity planning</li><li>Automated backup verification</li></ul>"

9. Dokumentové nerelační databáze - Use cases a porovnání	"<div><strong>Use cases a porovnání s relačními databázemi</strong></div><div><br></div><div><strong>Ideální use cases pro dokumentové DB:</strong></div><ul><li><strong>Content management</strong> - různorodé obsahové struktury</li><li><strong>E-commerce katalogy</strong> - produkty s různými atributy</li><li><strong>User profiles</strong> - flexibilní uživatelské profily</li><li><strong>IoT data</strong> - sensor data s proměnnou strukturou</li><li><strong>Real-time analytics</strong> - rychlé čtení a agregace</li></ul><div><br></div><div><strong>Kdy nepoužívat:</strong></div><ul><li>Komplexní transakce napříč entitami</li><li>Silně normalizovaná data</li><li>Časté join operace</li><li>Přísná ACID compliance</li></ul><div><br></div><div><strong>Porovnání s SQL:</strong></div><ul><li><strong>Flexibilita schématu:</strong> NoSQL ✓ vs SQL ✗</li><li><strong>ACID transakce:</strong> NoSQL ✗ vs SQL ✓</li><li><strong>Horizontální škálování:</strong> NoSQL ✓ vs SQL ✗</li><li><strong>Query složitost:</strong> NoSQL ✗ vs SQL ✓</li><li><strong>Learning curve:</strong> NoSQL ✓ vs SQL ✗</li></ul><div><br></div><div><strong>Hybridní přístupy:</strong></div><ul><li>Polyglot persistence - kombinace více typů databází</li><li>SQL databáze s JSON podporou (PostgreSQL, MySQL 8.0)</li><li>Multi-model databáze (ArangoDB, CosmosDB)</li></ul><div><br></div><div><strong>Rozhodovací faktory:</strong></div><div>Struktura dat, výkon, škálovatelnost, konzistence, developer experience</div>"