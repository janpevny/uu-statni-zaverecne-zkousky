8. Nerelační databáze - Základy NoSQL databází	"<div><strong>NoSQL databáze (Not only SQL)</strong></div><div><br></div><div><strong>Definice:</strong></div><div>Databázové systémy, které nepoužívají relační model a SQL jako primární přístup k datům</div><div><br></div><div><strong>Hlavní charakteristiky:</strong></div><ul><li><strong>Schema-free</strong> nebo <strong>Schema-flexible</strong> - flexibilní struktura dat</li><li><strong>Horizontální škálovatelnost</strong> - snadné přidávání serverů</li><li><strong>BASE princip</strong> - Basically Available, Soft state, Eventual consistency</li><li><strong>CAP theorem</strong> - kompromis mezi Consistency, Availability, Partition tolerance</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Vysoká škálovatelnost a výkon</li><li>Flexibilita při změnách datového modelu</li><li>Nižší náklady na hardware</li><li>Vhodné pro big data a real-time aplikace</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Omezená konzistence dat</li><li>Složitější dotazování než SQL</li><li>Méně standardizované</li><li>Nedostatek ACID transakcí</li></ul><div><br></div><div><strong>Kdy použít:</strong> Velká množství dat, rychlé čtení/zápis, flexibilní schema, distribuované systémy</div>"

8. Nerelační databáze - Dokumentové databáze	"<div><strong>Dokumentové databáze</strong></div><div><br></div><div><strong>Princip:</strong></div><div>Ukládají data ve formě dokumentů (JSON, BSON, XML), každý dokument obsahuje páry klíč-hodnota</div><div><br></div><div><strong>Charakteristiky:</strong></div><ul><li><strong>Schema-less</strong> - dokumenty nemusí mít stejnou strukturu</li><li><strong>Vnořené objekty</strong> - podporují komplexní datové struktury</li><li><strong>Indexování</strong> - možnost indexovat libovolná pole</li><li><strong>Dotazování</strong> - dotazy na struktura dokumentů</li></ul><div><br></div><div><strong>Populární systémy:</strong></div><ul><li><strong>MongoDB</strong> - nejpopulárnější, BSON formát</li><li><strong>CouchDB</strong> - Apache projekt, HTTP API</li><li><strong>Amazon DocumentDB</strong> - managed MongoDB kompatibilní</li><li><strong>Firebase Firestore</strong> - Google cloud databáze</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Flexibilní schema</li><li>Rychlé dotazování na dokumenty</li><li>Snadné mapování na objekty v aplikaci</li><li>Horizontální škálovatelnost</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Problém s complex joins</li><li>Možná duplicita dat</li><li>Velikost dokumentů může růst</li></ul><div><br></div><div><strong>Použití:</strong> E-commerce, content management, real-time aplikace, API backends</div>"

8. Nerelační databáze - Key-Value databáze	"<div><strong>Key-Value databáze</strong></div><div><br></div><div><strong>Princip:</strong></div><div>Nejjednodušší NoSQL model - každý záznam je pár klíč-hodnota, podobný hash table</div><div><br></div><div><strong>Charakteristiky:</strong></div><ul><li><strong>Jednoduchý model</strong> - pouze klíč a hodnota</li><li><strong>Vysoký výkon</strong> - optimalizované pro rychlé čtení/zápis</li><li><strong>Škálovatelnost</strong> - snadné distributed storage</li><li><strong>Omezené dotazování</strong> - pouze podle klíče</li></ul><div><br></div><div><strong>Populární systémy:</strong></div><ul><li><strong>Redis</strong> - in-memory, podporuje různé datové typy</li><li><strong>Amazon DynamoDB</strong> - managed NoSQL databáze</li><li><strong>Riak</strong> - distribuovaná key-value databáze</li><li><strong>Memcached</strong> - primárně pro caching</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Extrémně vysoký výkon</li><li>Jednoduchá implementace</li><li>Lineární škálovatelnost</li><li>Nízká latence</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Omezené dotazovací možnosti</li><li>Nelze dotazovat podle hodnoty</li><li>Žádné joins nebo relationships</li><li>Složitější pro komplexní data</li></ul><div><br></div><div><strong>Použití:</strong> Caching, session storage, shopping carts, user preferences, real-time recommendations</div>"

8. Nerelační databáze - Column-family databáze	"<div><strong>Column-family databáze (Wide Column)</strong></div><div><br></div><div><strong>Princip:</strong></div><div>Data jsou organizována v column families (podobné tabulkám), ale schéma je flexibilní na úrovni řádků</div><div><br></div><div><strong>Struktura:</strong></div><ul><li><strong>Keyspace</strong> - podobné databázi</li><li><strong>Column Family</strong> - podobné tabulce</li><li><strong>Row Key</strong> - identifikátor řádku</li><li><strong>Columns</strong> - dynamické sloupce s časovými razítky</li></ul><div><br></div><div><strong>Populární systémy:</strong></div><ul><li><strong>Cassandra</strong> - Apache projekt, vysoká dostupnost</li><li><strong>HBase</strong> - Hadoop ekosystém, real-time čtení/zápis</li><li><strong>Amazon SimpleDB</strong> - managed služba</li><li><strong>Google Bigtable</strong> - původní inspiration</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Vysoká škálovatelnost</li><li>Rychlé zápisy</li><li>Flexibilní schema</li><li>Časová řada dat</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Omezené dotazování</li><li>Složitější než key-value</li><li>Learning curve</li></ul><div><br></div><div><strong>Použití:</strong> Time series data, IoT aplikace, log data, analytics, messaging systems</div>"

8. Nerelační databáze - Grafové databáze	"<div><strong>Grafové databáze</strong></div><div><br></div><div><strong>Princip:</strong></div><div>Data jsou reprezentována jako graf s uzly (nodes), hranami (edges/relationships) a vlastnostmi (properties)</div><div><br></div><div><strong>Komponenty:</strong></div><ul><li><strong>Nodes</strong> - entity (osoby, místa, věci)</li><li><strong>Edges/Relationships</strong> - spojení mezi uzly</li><li><strong>Properties</strong> - atributy uzlů a hran</li><li><strong>Labels</strong> - kategorizace uzlů</li></ul><div><br></div><div><strong>Populární systémy:</strong></div><ul><li><strong>Neo4j</strong> - nejpopulárnější, Cypher query jazyk</li><li><strong>Amazon Neptune</strong> - managed graf databáze</li><li><strong>ArangoDB</strong> - multi-model including graphs</li><li><strong>JanusGraph</strong> - open source, distribuovaná</li></ul><div><br></div><div><strong>Výhody:</strong></div><ul><li>Optimalizované pro relationships</li><li>Intuitivní pro propojená data</li><li>Rychlé traversal queries</li><li>Flexibilní model</li></ul><div><br></div><div><strong>Nevýhody:</strong></div><ul><li>Complexity scaling</li><li>Specializované use cases</li><li>Výkon závisí na struktuře</li></ul><div><br></div><div><strong>Použití:</strong> Social networks, recommendation engines, fraud detection, knowledge graphs, network analysis</div>"

8. Nerelační databáze - RDF a objektové databáze	"<div><strong>RDF a objektové databáze</strong></div><div><br></div><div><strong>RDF databáze (Resource Description Framework):</strong></div><ul><li><strong>Triple store</strong> - subject, predicate, object triplets</li><li><strong>SPARQL</strong> - dotazovací jazyk pro RDF</li><li><strong>Ontologie</strong> - formální specifikace konceptů</li><li><strong>Semantic Web</strong> - propojená data na webu</li></ul><div><br></div><div><strong>RDF systémy:</strong></div><ul><li><strong>Apache Jena</strong> - Java framework pro RDF</li><li><strong>Virtuoso</strong> - multi-model včetně RDF</li><li><strong>Stardog</strong> - enterprise RDF databáze</li></ul><div><br></div><div><strong>Objektové databáze:</strong></div><ul><li><strong>Direct object persistence</strong> - objekty uložené přímo</li><li><strong>Object Query Language (OQL)</strong></li><li><strong>Inheritance</strong> - podpora dědičnosti</li><li><strong>Complex objects</strong> - vnořené objekty</li></ul><div><br></div><div><strong>Objektové systémy:</strong></div><ul><li><strong>db4o</strong> - embedded object databáze</li><li><strong>ObjectDB</strong> - JPA compliant</li><li><strong>Versant</strong> - enterprise řešení</li></ul><div><br></div><div><strong>Použití RDF:</strong> Semantic web, knowledge management, linked data</div><div><strong>Použití objektové:</strong> CAD systémy, scientific applications, complex domain models</div>"

8. Nerelační databáze - Výběr typu databáze	"<div><strong>Kdy použít který typ NoSQL databáze</strong></div><div><br></div><div><strong>Dokumentové databáze:</strong></div><ul><li>Semi-strukturovaná data</li><li>Rychlý prototyping</li><li>Content management</li><li>Real-time aplikace</li><li>JSON/BSON data format</li></ul><div><br></div><div><strong>Key-Value databáze:</strong></div><ul><li>Jednoduchá lookup operace</li><li>Caching layer</li><li>Session management</li><li>Real-time recommendations</li><li>Vysoký výkon požadavek</li></ul><div><br></div><div><strong>Column-family:</strong></div><ul><li>Time series data</li><li>Write-heavy aplikace</li><li>Big data analytics</li><li>IoT data streams</li><li>Log data management</li></ul><div><br></div><div><strong>Grafové databáze:</strong></div><ul><li>Social networks</li><li>Recommendation systems</li><li>Fraud detection</li><li>Network topology</li><li>Knowledge graphs</li></ul><div><br></div><div><strong>Rozhodovací faktory:</strong></div><ol><li><strong>Datová struktura</strong> - jednoduché vs. komplexní relationships</li><li><strong>Škálovatelnost</strong> - horizontální vs. vertikální</li><li><strong>Konzistence</strong> - ACID vs. eventual consistency</li><li><strong>Performance</strong> - read vs. write optimalizace</li><li><strong>Query complexity</strong> - jednoduché vs. složité dotazy</li></ol></div>"

8. Nerelační databáze - NoSQL vs SQL porovnání	"<div><strong>NoSQL vs SQL - porovnání a rozhodování</strong></div><div><br></div><div><strong>SQL databáze (RDBMS):</strong></div><ul><li><strong>ACID vlastnosti</strong> - Atomicity, Consistency, Isolation, Durability</li><li><strong>Structured data</strong> - pevné schéma</li><li><strong>Complex queries</strong> - JOINs, subqueries</li><li><strong>Vertikální škálování</strong> - výkonnější hardware</li><li><strong>Maturity</strong> - dlouhá historie, stabilita</li></ul><div><br></div><div><strong>NoSQL databáze:</strong></div><ul><li><strong>BASE vlastnosti</strong> - Basically Available, Soft state, Eventual consistency</li><li><strong>Flexible schema</strong> - semi-structured nebo unstructured data</li><li><strong>Simple queries</strong> - omezené dotazování</li><li><strong>Horizontální škálování</strong> - přidávání serverů</li><li><strong>Modern applications</strong> - big data, real-time</li></ul><div><br></div><div><strong>Použij SQL když:</strong></div><ul><li>Potřebuješ ACID transakce</li><li>Komplexní vztahy mezi daty</li><li>Structured data s pevným schématem</li><li>Reporting a analytics</li><li>Finanční aplikace</li></ul><div><br></div><div><strong>Použij NoSQL když:</strong></div><ul><li>Rapid development a prototyping</li><li>Horizontální škálování</li><li>Big data volumes</li><li>Real-time aplikace</li><li>Flexible/evolving data model</li></ul></div>"