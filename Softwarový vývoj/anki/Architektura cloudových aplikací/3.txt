3. Uživatelské rozhraní - Základní struktura UI	"<div><strong>Základní struktura uživatelského rozhraní</strong></div><div><br></div><div><strong>Vrstvy UI:</strong></div><ol><li><strong>Prezentační vrstva</strong> - vizuální reprezentace (HTML, CSS, komponenty)</li><li><strong>Logická vrstva</strong> - zpracování událostí (JavaScript, event handlers)</li><li><strong>Datová vrstva</strong> - správa stavu a komunikace s backend</li><li><strong>Navigační vrstva</strong> - routing a přechody mezi obrazovkami</li></ol><div><br></div><div><strong>Stavební bloky:</strong></div><ul><li><strong>Layout</strong> - header, sidebar, content, footer</li><li><strong>Navigace</strong> - menu, breadcrumbs, tabs</li><li><strong>Formuláře</strong> - input fields, validace</li><li><strong>Datové komponenty</strong> - tabulky, seznamy, karty</li><li><strong>Feedback elementy</strong> - notifikace, loading states</li></ul><div><br></div><div><strong>Principy návrhu:</strong></div><ul><li><strong>Konzistence</strong> - jednotný design systém</li><li><strong>Hierarchie</strong> - vizuální důležitost elementů</li><li><strong>Přístupnost</strong> - WCAG standardy, ARIA atributy</li><li><strong>Responzivita</strong> - přizpůsobení různým obrazovkám</li></ul></div>"

3. Uživatelské rozhraní - Komponentový přístup	"<div><strong>Komponentový přístup k vývoji UI</strong></div><div><br></div><div><strong>Filozofie komponent:</strong></div><ul><li><strong>Enkapsulace</strong> - komponenta obsahuje markup, styly i logiku</li><li><strong>Znovupoužitelnost</strong> - komponenty lze použít na více místech</li><li><strong>Kompozice</strong> - skládání komplexních UI z jednoduchých komponent</li><li><strong>Izolace</strong> - komponenty jsou nezávislé a self-contained</li></ul><div><br></div><div><strong>Anatomie komponenty:</strong></div><ul><li><strong>Props/Inputs</strong> - data předávaná zvenčí</li><li><strong>State</strong> - interní stav komponenty</li><li><strong>Template/Render</strong> - vizuální reprezentace</li><li><strong>Lifecycle hooks</strong> - metody volaní v různých fázích života</li><li><strong>Events/Outputs</strong> - komunikace s parent komponentou</li></ul><div><br></div><div><strong>Typy komponent (Atomic Design):</strong></div><ul><li><strong>Atomy</strong> - Button, Input, Icon (nejmenší jednotky)</li><li><strong>Molekuly</strong> - SearchBar, ProductCard (kombinace atomů)</li><li><strong>Organismy</strong> - Header, ProductList (komplexní celky)</li></ul></div>"

3. Uživatelské rozhraní - Webové technologie	"<div><strong>Základní webové technologie pro UI</strong></div><div><br></div><div><strong>HTML5:</strong></div><ul><li><strong>Sémantické elementy</strong> - header, nav, main, article, section, footer</li><li><strong>Formulářové prvky</strong> - nové input typy (date, email, number, range)</li><li><strong>Media elementy</strong> - video, audio, canvas, svg</li><li><strong>Web APIs</strong> - localStorage, geolocation, web workers</li></ul><div><br></div><div><strong>CSS3:</strong></div><ul><li><strong>Layout systémy</strong> - Flexbox (1D), CSS Grid (2D)</li><li><strong>CSS Variables</strong> - custom properties pro theming</li><li><strong>Animations</strong> - transitions a @keyframes animace</li><li><strong>Responzivní design</strong> - media queries, mobile-first</li><li><strong>Preprocessory</strong> - SASS/SCSS, PostCSS</li></ul><div><br></div><div><strong>JavaScript ES6+:</strong></div><ul><li><strong>Moderní syntax</strong> - arrow functions, destructuring, modules</li><li><strong>Async/await</strong> - práce s asynchronním kódem</li><li><strong>DOM manipulace</strong> - querySelector, event listeners</li><li><strong>Fetch API</strong> - moderní AJAX komunikace</li></ul></div>"

3. Uživatelské rozhraní - Frontend frameworky	"<div><strong>Moderní frontend frameworky</strong></div><div><br></div><div><strong>React (Meta/Facebook):</strong></div><ul><li><strong>Virtual DOM</strong> - efektivní rendering</li><li><strong>JSX</strong> - kombinace JavaScript a HTML</li><li><strong>Hooks</strong> - useState, useEffect, custom hooks</li><li><strong>Component-based</strong> architektura</li><li><strong>Ekosystém</strong> - React Router, Redux, Next.js</li></ul><div><br></div><div><strong>Angular (Google):</strong></div><ul><li><strong>TypeScript</strong> jako primární jazyk</li><li><strong>Two-way data binding</strong> - automatická synchronizace</li><li><strong>Dependency Injection</strong> - správa závislostí</li><li><strong>RxJS</strong> - reaktivní programování</li><li><strong>Angular CLI</strong> - nástroj pro scaffolding a build</li></ul><div><br></div><div><strong>Vue.js:</strong></div><ul><li>Progressive framework - postupné přijetí</li><li>Template syntax podobná HTML</li><li>Reaktivní systém</li><li>Single File Components</li></ul><div><br></div><div><strong>Výhody frameworků:</strong></div><ul><li>Rychlejší vývoj</li><li>Strukturovaný kód</li><li>Velká komunita</li><li>Bohatý ekosystém nástrojů</li></ul></div>"

3. Uživatelské rozhraní - CSS frameworky a knihovny	"<div><strong>CSS frameworky a styling knihovny</strong></div><div><br></div><div><strong>Component frameworky:</strong></div><ul><li><strong>Bootstrap</strong> - nejrozšířenější, grid systém, připravené komponenty</li><li><strong>Material-UI</strong> - implementace Google Material Design</li><li><strong>Ant Design</strong> - enterprise-focused design system</li><li><strong>Chakra UI</strong> - modulární a přístupný component library</li></ul><div><br></div><div><strong>Utility-first frameworky:</strong></div><ul><li><strong>Tailwind CSS</strong> - utility classes pro styling</li><li><strong>UnoCSS</strong> - on-demand atomic CSS</li><li>Filozofie: komponování stylů z malých utility tříd</li><li>Rychlý vývoj, konzistence, malý výsledný CSS</li></ul><div><br></div><div><strong>CSS-in-JS řešení:</strong></div><ul><li><strong>Styled Components</strong> - CSS přímo v JavaScript komponentách</li><li><strong>Emotion</strong> - performantní CSS-in-JS knihovna</li><li><strong>CSS Modules</strong> - lokální scope pro CSS třídy</li></ul><div><br></div><div><strong>Výhody CSS frameworků:</strong></div><ul><li>Rychlý prototyping a vývoj</li><li>Konzistentní design</li><li>Cross-browser kompatibilita</li><li>Responsive design zabudovaný</li></ul></div>"

3. Uživatelské rozhraní - Mobilní a cross-platform	"<div><strong>Mobilní a cross-platform technologie</strong></div><div><br></div><div><strong>Progressive Web Apps (PWA):</strong></div><ul><li><strong>Service Workers</strong> - offline funkcionalita a caching</li><li><strong>Web App Manifest</strong> - instalace na domovskou obrazovku</li><li><strong>Push Notifications</strong> - engagement s uživateli</li><li><strong>Responsive design</strong> - přizpůsobení všem zařízením</li></ul><div><br></div><div><strong>Hybridní mobilní frameworky:</strong></div><ul><li><strong>React Native</strong> - nativní komponenty s React syntaxí</li><li><strong>Ionic</strong> - web technologie pro mobilní aplikace</li><li><strong>Flutter</strong> - Dart jazyk, vlastní rendering engine</li><li><strong>Capacitor/Cordova</strong> - wrapper pro web aplikace</li></ul><div><br></div><div><strong>Desktop aplikace:</strong></div><ul><li><strong>Electron</strong> - Chromium + Node.js (VS Code, Discord)</li><li><strong>Tauri</strong> - Rust backend s web frontend</li><li><strong>PWA</strong> - instalovatelné web aplikace na desktop</li></ul><div><br></div><div><strong>Výhody cross-platform:</strong></div><ul><li>Jeden codebase pro více platforem</li><li>Rychlejší time-to-market</li><li>Nižší náklady na vývoj a údržbu</li><li>Konzistentní UX napříč platformami</li></ul></div>"

3. Uživatelské rozhraní - Nástroje a trendy	"<div><strong>Development nástroje a moderní trendy</strong></div><div><br></div><div><strong>Build tools a bundlers:</strong></div><ul><li><strong>Webpack</strong> - nejrozšířenější bundler s komplexní konfigurací</li><li><strong>Vite</strong> - rychlý development server a build tool</li><li><strong>Parcel</strong> - zero-config bundler</li><li><strong>Rollup</strong> - optimalizovaný pro knihovny</li></ul><div><br></div><div><strong>Development workflow:</strong></div><ul><li><strong>Hot Module Replacement</strong> - okamžité změny bez reload</li><li><strong>ESLint/Prettier</strong> - code quality a formatting</li><li><strong>TypeScript</strong> - type safety</li><li><strong>Testing</strong> - Jest, Cypress, Playwright</li></ul><div><br></div><div><strong>State management:</strong></div><ul><li><strong>Redux</strong> - predictable state container</li><li><strong>Zustand</strong> - lightweight state solution</li><li><strong>Context API</strong> - built-in React řešení</li></ul><div><br></div><div><strong>Moderní trendy:</strong></div><ul><li><strong>JAMstack</strong> - JavaScript, APIs, Markup</li><li><strong>SSR/SSG</strong> - Server-Side Rendering/Static Site Generation</li><li><strong>Micro-frontends</strong> - nezávislé frontend aplikace</li><li><strong>Core Web Vitals</strong> - performance metriky (LCP, FID, CLS)</li></ul></div>"

3. Uživatelské rozhraní - Performance a přístupnost	"<div><strong>Performance optimalizace a přístupnost</strong></div><div><br></div><div><strong>Performance optimalizace:</strong></div><ul><li><strong>Code splitting</strong> - lazy loading komponent a route-based splitting</li><li><strong>Image optimization</strong> - WebP formát, lazy loading, responsive images</li><li><strong>Bundle optimization</strong> - tree shaking, minifikace, compression</li><li><strong>Caching strategie</strong> - browser cache, CDN, service workers</li></ul><div><br></div><div><strong>Core Web Vitals:</strong></div><ul><li><strong>LCP (Largest Contentful Paint)</strong> - rychlost načítání</li><li><strong>FID (First Input Delay)</strong> - interaktivita</li><li><strong>CLS (Cumulative Layout Shift)</strong> - vizuální stabilita</li></ul><div><br></div><div><strong>Accessibility (WCAG):</strong></div><ul><li><strong>Perceivable</strong> - informace musí být vnímatelné</li><li><strong>Operable</strong> - rozhraní musí být ovladatelné</li><li><strong>Understandable</strong> - informace musí být srozumitelné</li><li><strong>Robust</strong> - obsah musí být robustní</li></ul><div><br></div><div><strong>Praktická implementace:</strong></div><ul><li><strong>ARIA labels</strong> - screen reader podpora</li><li><strong>Keyboard navigation</strong> - plná funkcionalita bez myši</li><li><strong>Color contrast</strong> - WCAG AA/AAA standardy</li><li><strong>Progressive enhancement</strong> - funkčnost bez JavaScriptu</li></ul></div>"