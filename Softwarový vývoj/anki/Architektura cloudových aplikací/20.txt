20. Pokročilejší práce s řetězci - Základní metody pro manipulaci	"<div><strong>Základní metody pro manipulaci řetězců</strong></div><div><br></div><div><strong>Klíčové metody:</strong></div><ul><li><strong>substr(), substring(), slice()</strong> - extrakce částí řetězce</li><li><strong>charAt(), charCodeAt()</strong> - přístup k jednotlivým znakům</li><li><strong>indexOf(), lastIndexOf()</strong> - vyhledávání pozice</li><li><strong>includes(), startsWith(), endsWith()</strong> - test výskytu</li></ul><div><br></div><div><strong>Praktické příklady:</strong></div><ul><li><strong>JavaScript:</strong> 'Hello World'.slice(0, 5) → 'Hello'</li><li><strong>Python:</strong> 'text'[1:3] → 'ex'</li><li><strong>C#:</strong> str.Substring(0, 3)</li></ul>"

20. Pokročilejší práce s řetězci - Transformace a formátování	"<div><strong>Transformace a formátování řetězců</strong></div><div><br></div><div><strong>Transformační metody:</strong></div><ul><li><strong>toUpperCase(), toLowerCase()</strong> - změna velikosti písmen</li><li><strong>trim(), trimStart(), trimEnd()</strong> - odstranění bílých znaků</li><li><strong>replace(), replaceAll()</strong> - náhrada textu</li><li><strong>split(), join()</strong> - rozdělení a spojování</li></ul><div><br></div><div><strong>Formátování:</strong></div><ul><li><strong>Template literals</strong> - `Hello ${name}!`</li><li><strong>String.prototype.padStart/padEnd</strong> - doplnění znaků</li><li><strong>Lokalizace</strong> - toLocaleLowerCase(), Intl.Collator</li></ul>"

20. Pokročilejší práce s řetězci - Pokročilé vyhledávání a porovnávání	"<div><strong>Pokročilé vyhledávání a porovnávání</strong></div><div><br></div><div><strong>Vyhledávací metody:</strong></div><ul><li><strong>search()</strong> - vyhledávání s regulárními výrazy</li><li><strong>match(), matchAll()</strong> - extrakce všech shod</li><li><strong>localeCompare()</strong> - lokalizované porovnávání</li><li><strong>normalize()</strong> - Unicode normalizace</li></ul><div><br></div><div><strong>Výhody pokročilých metod:</strong></div><ul><li><strong>Výkon</strong> - optimalizované algoritmy</li><li><strong>Internacionalizace</strong> - podpora různých jazyků</li><li><strong>Flexibilita</strong> - kombinace s regulárními výrazy</li></ul>"

20. Pokročilejší práce s řetězci - Regulární výrazy základy	"<div><strong>Regulární výrazy - základní koncepty</strong></div><div><br></div><div><strong>Co jsou regulární výrazy:</strong></div><ul><li><strong>Definice</strong> - vzory pro vyhledávání a manipulaci textu</li><li><strong>Syntax</strong> - speciální znaky a metaznaky</li><li><strong>Engine</strong> - DFA/NFA automaty pro zpracování</li></ul><div><br></div><div><strong>Základní metaznaky:</strong></div><ul><li><strong>. (tečka)</strong> - libovolný znak</li><li><strong>* + ?</strong> - kvantifikátory</li><li><strong>^ $</strong> - začátek/konec řetězce</li><li><strong>[] {}</strong> - třídy znaků a počty</li><li><strong>() |</strong> - skupiny a alternace</li></ul>"

20. Pokročilejší práce s řetězci - Pokročilé regex konstrukty	"<div><strong>Pokročilé konstrukty regulárních výrazů</strong></div><div><br></div><div><strong>Pokročilé funkce:</strong></div><ul><li><strong>Lookahead/Lookbehind</strong> - (?=), (?!), (?<=), (?<!)</li><li><strong>Named groups</strong> - (?<name>pattern)</li><li><strong>Backreferences</strong> - \\1, \\k<name></li><li><strong>Atomic groups</strong> - (?>pattern)</li></ul><div><br></div><div><strong>Flags a modifikátory:</strong></div><ul><li><strong>i</strong> - case insensitive</li><li><strong>g</strong> - global search</li><li><strong>m</strong> - multiline mode</li><li><strong>s</strong> - dotall mode</li><li><strong>u</strong> - unicode support</li></ul>"

20. Pokročilejší práce s řetězci - JavaScript RegExp objekt	"<div><strong>JavaScript RegExp objekt a metody</strong></div><div><br></div><div><strong>Vytvoření regex:</strong></div><ul><li><strong>Literálová syntax</strong> - /pattern/flags</li><li><strong>Konstruktor</strong> - new RegExp('pattern', 'flags')</li><li><strong>Dynamické vytvoření</strong> - z proměnných</li></ul><div><br></div><div><strong>Metody RegExp:</strong></div><ul><li><strong>test()</strong> - boolean test shody</li><li><strong>exec()</strong> - detailní informace o shodě</li><li><strong>String.match()</strong> - nalezení shod v řetězci</li><li><strong>String.replace()</strong> - náhrada s regex</li></ul>"

20. Pokročilejší práce s řetězci - Praktické použití regex v JS	"<div><strong>Praktické použití regulárních výrazů</strong></div><div><br></div><div><strong>Validace formátů:</strong></div><ul><li><strong>Email</strong> - /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/</li><li><strong>Telefon</strong> - /^\\+?[0-9]{9,15}$/</li><li><strong>URL</strong> - komplexní validace protokolu a domény</li></ul><div><br></div><div><strong>Parsing a extrakce dat:</strong></div><ul><li><strong>Log files</strong> - extrakce časových razítek, IP adres</li><li><strong>CSV parsing</strong> - zpracování strukturovaných dat</li><li><strong>Template engines</strong> - náhrada placeholderů</li><li><strong>Code analysis</strong> - vyhledávání funkcí, komentářů</li></ul>"

20. Pokročilejší práce s řetězci - Performance a best practices	"<div><strong>Performance a nejlepší praktiky</strong></div><div><br></div><div><strong>Optimalizace výkonu:</strong></div><ul><li><strong>Kompilace regex</strong> - uložení do proměnné</li><li><strong>Alternativy</strong> - indexOf() vs regex pro jednoduché případy</li><li><strong>Backtracking</strong> - vyhnutí se catastrophic backtracking</li><li><strong>Atomic groups</strong> - prevence nekonečných cyklů</li></ul><div><br></div><div><strong>Best practices:</strong></div><ul><li><strong>Čitelnost</strong> - komentáře a dokumentace regex</li><li><strong>Testování</strong> - jednotkové testy pro komplexní regex</li><li><strong>Security</strong> - validace vstupu, ReDoS útoky</li><li><strong>Maintainability</strong> - rozdělení komplexních regex</li></ul>"